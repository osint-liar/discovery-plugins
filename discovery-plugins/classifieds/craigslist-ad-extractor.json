{
  "Uuid": "b8513462-3944-4699-be48-0f3148fc60ee",
  "PluginType": "event",
  "Url": "^https://([a-zA-Z0-9\\-]+\\.)?craigslist\\.org(/.*)?$",
  "Active": true,
  "GroupName": "Default",
  "Action": "Middleware",
  "HomePage": "https://www.craigslist.org/",
  "SupportPage": "https://www.craigslist.org/about/",
  "UpdateUrl": null,
  "ExpiresOn": null,
  "Description": "This script automates the extraction of images and geolocation data from Craigslist postings, enabling efficient collection and analysis of publicly available information. It gathers visual content and location details to provide geographic context, identify visual clues, and detect patterns across ads. This capability is crucial for OSINT investigations, as it aids in tracking illegal activities, uncovering scams, and linking multiple postings to common sources. By automating this process, the script enhances efficiency and provides actionable insights for law enforcement, cybersecurity, investigative journalism, and market analysis, making it a powerful tool for monitoring and analysis in OSINT workflows.",
  "Label": "Craigslist - Ad - Info",
  "ReadOnly": false,
  "SortOrder": 0,
  "TimeOut": 100,
  "LastAccessedOn": null,
  "CreatedOn": "2025-01-03T12:37:30.777",
  "TimeTaken": 0,
  "DiscoveryToolSiteUuid": null,
  "DiscoveryPluginParentUuid": null,
  "Method": "GET",
  "Version": "1.0.0",
  "MimeTypeRegex": null,
  "Status": null,
  "ContentTypeHeader": null,
  "FieldMapping": {},
  "Headers": {},
  "Regex": null,
  "AuthorizationBearerToken": null,
  "AuthorizationUserName": null,
  "AuthorizationPassword": null,
  "EventType": "PreContentCreate",
  "ForwardResponse": false,
  "Script": "/**\r\n * @param {object} plugin - The current discovery plugin that is running.\r\n * @param {object} contentSchema - The current content record.\r\n * @param {object} data - The data is variable and is dependent upon the selected event.\r\n * @param {object} configurations - The available API keys.\r\n */\r\nasync function runScript(plugin, contentSchema, data, configurations) {\r\n    // PUT CODE BELOW THIS LINE\r\n    log.info(`running ${plugin.label}`);\r\n    const latitude = doc.documentNode.selectSingleNode(\"//*[@id='map']\").getAttributeValue('data-latitude', null);\r\n    const longitude = doc.documentNode.selectSingleNode(\"//*[@id='map']\").getAttributeValue('data-longitude', null);\r\n    const startedOn = doc.documentNode.SelectNodes(\"//time[contains(@class, 'timeago')]\").firstOrDefault().getAttributeValue('datetime', null);\r\n\r\n    contentSchema.contentLatitude = latitude;\r\n    contentSchema.contentLongitude = longitude;\r\n    contentSchema.contentStartedOn = startedOn;    \r\n\r\n    const imagesLookup = contentSchema.extractImages();\r\n    const collection = doc.documentNode.selectNodes(\"//img[contains(@alt,'thumbnail')]\");\r\n    const nodes = contentSchema.contentNodes;\r\n\r\n    for (const node of collection) {\r\n        let src = node.getAttributeValue('src', '');\r\n        log.info(`src is ${src}`);\r\n        if (src.endsWith('_50x50c.jpg')) {\r\n            src = src.replace('_50x50c.jpg', '_600x450.jpg');\r\n        } \r\n        const base64image = imagesLookup[src];\r\n        let newContentSchema = contentSchema.clone(base64image);\r\n        newContentSchema.contentScreenShot = base64image;\r\n        newContentSchema.contentUrl = src;        \r\n        nodes.add(newContentSchema);\r\n    }\r\n\r\n    contentSchema.contentNodes = nodes;\r\n    // PUT CODE ABOVE THIS LINE\r\n}\r\n",
  "Inputs": null,
  "Outputs": null
}